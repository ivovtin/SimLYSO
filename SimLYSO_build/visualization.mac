#set verbose
#/control/verbose 2
#/control/saveHistory
#/tracking/verbose 2

/run/verbose 2
/event/verbose 0
/tracking/verbose 0
/vis/verbose 2

#Set physics
#/testem/phys/addPhysics   emstandard_opt4

#
/run/initialize

# step limit
#/testem/phys/setCuts 0.01 mm
#/testem/stepMax 0.05 mm

# Create a scene
#/vis/scene/create

# Use this open statement to create an OpenGL view:
#/vis/open HepRepFile
#/vis/open VRML1FILE
/vis/open OGL
#/vis/open OGL 600x600-0+0
#/vis/open OGLIQt
#/vis/open OGLI
#/vis/open OGLIX
#/vis/open OGLS

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
##/vis/viewer/set/autoRefresh false
#/vis/verbose errors

# Invoke a visualization driver
#
#/vis/sceneHandler/create VRML2FILE
#
#/vis/viewer/create
#/vis/viewer/set/culling global false

#/vis/sceneHandler/create OGL
/vis/viewer/create ! ! 600x600-0+0
/vis/viewer/refresh

/vis/viewer/set/autoRefresh false
/vis/verbose errors

#/vis/viewer/zoom 1.5

## Specify style (surface, wireframe, auxiliary edges,...)
#/vis/viewer/set/style wireframe
#/vis/viewer/set/auxiliaryEdge true
#/vis/viewer/set/lineSegmentsPerCircle 100

# Draw geometry:
/vis/drawVolume

#/vis/scene/create
/vis/scene/add/volume world
/vis/sceneHandler/attach

/vis/scene/add/trajectories smooth
/tracking/storeTrajectory 2
/vis/scene/notifyHandlers
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/scene/notifyHandlers scene-0
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1
/vis/scene/notifyHandlers scene-0

/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
/vis/scene/notifyHandlers scene-0


# Specify view angle:
#/vis/viewer/set/viewpointVector -1 0 0
#/vis/viewer/set/lightsVector -1 0 0

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
#/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
#/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2

# Add the detector components to the scene
#/vis/scene/add/volume 
#
# Draw coordinate axes:
/vis/scene/add/axes 0 0 0 10 mm

# Store generated trajectories
#/tracking/storeTrajectory 1
#/vis/scene/add/trajectories smooth
/vis/scene/endOfEventAction accumulate
#/vis/scene/notifyHandlers

# Decorations
# Name
#/vis/set/textColour green
#/vis/set/textLayout right
#/vis/scene/add/text2D 0.9 -.9 24 ! ! exampleB1
# or, if your system does not support right-adjustment
#/vis/scene/add/text2D 0 -.9 24 ! ! exampleB1
#/vis/set/textLayout    # Revert to normal (left adjusted) layout
#/vis/set/textColour    # Revert to default text colour (blue)
#
# Axes, scale, etc.
#/vis/scene/add/scale   # Simple scale line
#/vis/scene/add/axes    # Simple axes: x=red, y=green, z=blue.
#/vis/scene/add/eventID # Drawn at end of event
#/vis/scene/add/date    # Date stamp
#/vis/scene/add/logo2D  # Simple logo
#/vis/scene/add/logo    # 3D logo
#
# Frame
#/vis/set/colour red
#/vis/set/lineWidth 2
#/vis/scene/add/frame   # Simple frame around the view
#/vis/set/colour        # Revert to default colour (white)
#/vis/set/lineWidth

# To get nice view
# Make the "World" box invisible
#/vis/geometry/set/visibility World 0 false

#Run simulation
/run/beamOn 1

/vis/ogl/set/printMode vectored
#/vis/ogl/set/transparency False
/vis/ogl/set/printFilename test
/vis/ogl/printEPS

#Redrawing of the scene can be done as follows: 
#/vis/viewer/update

/vis/viewer/set/autoRefresh true
/vis/viewer/refresh
/vis/verbose warnings
